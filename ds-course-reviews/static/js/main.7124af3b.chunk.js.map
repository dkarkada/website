{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["readKey","a","fetch","then","response","json","kv","key","GoogleAuth","SCOPES","SPREADSHEET_ID","Semester2Num","date","arr","toLowerCase","split","length","sem","year","parseInt","isNaN","Review","props","reviewer","misc","className","coursenum","coursename","prof","difficulty","workload","lecture","ReviewReader","allDeptNames","Map","allCoursenums","allProfs","reviews","review","dept","has","get","push","set","cn","deptList","Array","from","keys","sort","state","course","search","availProfs","availCourses","availReviews","numRevShown","e","this","setState","target","value","updateReviews","includes","filter","map","Set","matches","onChange","deptChange","bind","deptname","courseChange","profChange","type","placeholder","searchChange","pageStart","loadMore","loadMoreReviews","hasMore","loader","slice","reviewID","React","Component","ReviewWriter","allDepts","rev","allCourseNames","deptMap","profs","add","coursenames","forEach","v","k","today","Date","dates","month","getMonth","getFullYear","i","availCourseNames","formElems","reviewerInp","deptSelect","coursenumInp","coursenameInp","profInp","dateSelect","difficultyBox","workloadBox","lectureBox","miscBox","elem","localStorage","getItem","inputChangeHandler","id","setItem","trim","datenum","rangeData","values","params","spreadsheetId","range","valueInputOption","insertDataOption","window","gapi","client","load","sheets","spreadsheets","append","removeItem","reason","alert","console","error","result","message","currentUser","hasGrantedScopes","submitReview","signIn","htmlFor","required","disabled","list","style","width","resize","minRows","maxRows","darkMode","onClick","onSubmit","minHeight","App","darkmode","document","documentElement","setAttribute","isLoading","readMode","newReviews","rev1","rev2","API_KEY","init","apiKey","clientId","scope","auth2","getAuthInstance","path","request","sheet","properties","title","titles","data","method","Promise","all","revCount","row","l","log","script","createElement","src","async","onload","readData","body","appendChild","content","btn","addReview","size","toggleDarkMode","toggleReadMode","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.7124af3b.chunk.js","sourcesContent":["import React from 'react';\nimport {FaAdjust, FaKickstarterK} from 'react-icons/fa'\nimport InfiniteScroll from 'react-infinite-scroller';\nimport TextareaAutosize from 'react-textarea-autosize'\nimport './App.css';\n\nasync function readKey() {\n  return await fetch('./api.config').then((response) => {\n    return response.json();\n  }).then(kv => {return kv.key});\n}\n\nconst CLIENT_ID = '515215863375-ane9fqmjm48innd6mc3fh6l38qihpai0.apps.googleusercontent.com';\nconst SCOPES = \"https://www.googleapis.com/auth/spreadsheets\";\nconst SPREADSHEET_ID = '1AJO52gUTAElYGcfGMK07YkEfWdYNEITkjzS8hhOFTww';\nvar GoogleAuth;\n\nfunction Semester2Num(date) {\n  var arr = date.toLowerCase().split(/\\s+/);\n  if (arr.length >=2) {\n    var sem = arr[0];\n    var year = parseInt(arr[1]);\n    if (isNaN(year)) {return 0;}\n    if (sem == \"spring\") {\n      return year + 0.1;\n    }\n    if (sem == \"summer\") {\n      return year + 0.2;\n    }\n    if (sem == \"fall\") {\n      return year + 0.3;\n    }\n    return year + 0.4;\n  }\n  return 0;\n}\n\nfunction Review(props){\n  var reviewer = props.reviewer ? <p><b>Reviewer: </b>{props.reviewer}</p> : null;\n  var misc = props.misc ? <p><b>Miscellaneous: </b>{props.misc}</p> : null;\n  return (\n    <div className=\"review\">\n      <h2>{props.coursenum} {props.coursename} <br />\n      Prof. {props.prof}, {props.date}</h2>\n      {reviewer}\n      <p><b>Difficulty: </b>{props.difficulty}</p>\n      <p><b>Workload: </b>{props.workload}</p>\n      <p><b>Lectures: </b>{props.lecture}</p>\n      {misc}\n    </div>\n  );\n}\n\nclass ReviewReader extends React.Component {\n\n  constructor(props) {\n    super(props);\n    var allDeptNames = new Map();\n    var allCoursenums = new Map();\n    var allProfs = new Map();\n    for (let review of props.reviews) {\n      let dept = review.dept;\n      if (allDeptNames.has(dept)) {\n        allDeptNames.get(dept).push(review)\n      } else {\n        allDeptNames.set(dept, [review])\n      }\n      let cn = review.coursenum;\n      if (allCoursenums.has(cn)) {\n        allCoursenums.get(cn).push(review)\n      } else {\n        allCoursenums.set(cn, [review])\n      }\n      let prof = review.prof;\n      if (allProfs.has(prof)) {\n        allProfs.get(prof).push(review)\n      } else {\n        allProfs.set(prof, [review])\n      }\n    }\n    this.allDeptNames = allDeptNames\n    this.allCoursenums = allCoursenums;\n    this.allProfs = allProfs;\n    this.deptList = Array.from(this.allDeptNames.keys()).sort();\n    this.state = {\n      dept: \"\",\n      course: \"\",\n      prof: \"\",\n      search: \"\",\n      availProfs: Array.from(this.allProfs.keys()).sort(),\n      availCourses: Array.from(this.allCoursenums.keys()).sort(),\n      availReviews: this.props.reviews,\n      numRevShown: 20\n    }\n  }\n\n  deptChange(e) {\n    this.setState({dept: e.target.value, course: \"\", prof: \"\"});\n    this.setState((state) => this.updateReviews(state));\n  }\n\n  courseChange(e) {\n    if (this.state.dept == \"\") {\n      let dept = this.allCoursenums.get(e.target.value)[0].dept;\n      this.setState({dept: dept, course: e.target.value});\n    } else {\n      this.setState({course: e.target.value});\n    }\n    this.setState((state) => this.updateReviews(state));\n  }\n\n  profChange(e) {\n    if (this.state.dept == \"\") {\n      let dept = this.allProfs.get(e.target.value)[0].dept;\n      this.setState({dept: dept, prof: e.target.value});\n    } else {\n      this.setState({prof: e.target.value});\n    }\n    this.setState((state) => this.updateReviews(state));\n  }\n\n  searchChange(e) {\n    this.setState({search: e.target.value});\n    this.setState((state) => this.updateReviews(state));\n  }\n\n  matches(review, search) {\n    search = search.toLowerCase();\n    return review.coursename.toLowerCase().includes(search) ||\n            review.prof.toLowerCase().includes(search) ||\n            review.reviewer.toLowerCase().includes(search);\n  }\n\n  updateReviews(state) {\n    var reviews = this.props.reviews;\n    var availCourses;\n    var availProfs;\n    if (state.dept == \"\") {\n      availCourses = Array.from(this.allCoursenums.keys()).sort();\n      availProfs = Array.from(this.allProfs.keys()).sort();\n    } else {\n      reviews = this.allDeptNames.get(state.dept);\n      availCourses = reviews.filter(review => {\n          return state.prof == \"\" || review.prof == state.prof\n        }).map(review => {\n          return review.coursenum;\n      });\n      availProfs = reviews.filter(review => {\n          return state.course == \"\" || review.coursenum == state.course\n        }).map(review => {\n          return review.prof;\n      });\n      availCourses = Array.from(new Set(availCourses)).sort();\n      availProfs = Array.from(new Set(availProfs)).sort();\n    }\n    reviews = reviews.filter(review => {\n      return (state.prof == \"\" || review.prof == state.prof)\n        && (state.course == \"\" || review.coursenum == state.course)\n        && (state.search == \"\" || this.matches(review, state.search));\n    });\n    return ({availCourses: availCourses, availProfs: availProfs,\n      availReviews: reviews, numRevShown: 20})\n  }\n\n  loadMoreReviews() {\n    if (this.state.numRevShown + 20 < this.state.availReviews.length) {\n      this.setState(state => ({\n        numRevShown: state.numRevShown + 20\n      }));\n    }\n    else {\n      this.setState(state => ({\n        numRevShown: state.availReviews.length\n      }));\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"review-reader\">\n        <select className='selector' value={this.state.dept} onChange={this.deptChange.bind(this)}>\n          <option key=\"\" value=\"\"> [All departments] </option>\n          {this.deptList.map(deptname =>\n            <option key={deptname}>{deptname}</option>\n          )}\n        </select>\n        <select className='selector' value={this.state.course} onChange={this.courseChange.bind(this)}>\n          <option key=\"\" value=\"\"> [All courses] </option>\n          {this.state.availCourses.map(cn =>\n            <option key={cn}>{cn}</option>\n          )}\n        </select>\n        <select className='selector' value={this.state.prof} onChange={this.profChange.bind(this)}>\n          <option key=\"\" value=\"\"> [All professors] </option>\n          {this.state.availProfs.map(prof =>\n            <option key={prof}>{prof}</option>\n          )}\n        </select>\n        <input className='selector' type=\"text\" placeholder=\"Course name search\" onChange={this.searchChange.bind(this)}/>\n        <InfiniteScroll\n            pageStart={0}\n            loadMore={this.loadMoreReviews.bind(this)}\n            hasMore={this.state.availReviews.length != this.state.numRevShown}\n            loader={<div className=\"loader\" key={0}>Loading ...</div>}\n        >\n            {this.state.availReviews.slice(0, this.state.numRevShown).map(review => <Review key={review.reviewID} {...review}/>)}\n        </InfiniteScroll>\n      </div>\n    );\n  }\n}\n\nclass ReviewWriter extends React.Component {\n  constructor(props) {\n    super(props);\n    this.allDepts = Array.from(new Set(props.reviews.map(rev => rev.dept))).sort();\n    this.allProfs = Array.from(new Set(props.reviews.map(rev => rev.prof))).sort()\n    this.allCourseNames = Array.from(new Set(props.reviews.map(rev => rev.coursename))).sort();\n    var deptMap = new Map();\n    for (let review of props.reviews) {\n      let dept = review.dept;\n      if (deptMap.has(dept)) {\n        deptMap.get(dept).profs.add(review.prof);\n        deptMap.get(dept).coursenames.add(review.coursename);\n      } else {\n        deptMap.set(dept, {profs: new Set([review.prof]),\n                           coursenames: new Set([review.coursename])});\n      }\n    }\n    deptMap.forEach((v, k, map) => {\n      map.set(k, {profs: Array.from(v.profs).sort(),\n                  coursenames: Array.from(v.coursenames).sort()});\n    });\n    this.deptMap = deptMap;\n\n    var today = new Date();\n    this.dates = []\n    var month = today.getMonth() + 1;\n    var year = today.getFullYear();\n    for (var i=0; i<12; i++) {\n      if (month > 8 || month < 2) {\n        this.dates.push(`Fall ${year}`);\n        month = 8;\n      }\n      else if (month > 6) {\n        this.dates.push(`Summer ${year}`);\n        month = 6;\n        }\n      else {\n        this.dates.push(`Spring ${year}`);\n        month = 10;\n        year -= 1;\n      }\n    }\n\n    var formElems = {\n      reviewerInp: \"\",\n      deptSelect: \"\",\n      coursenumInp: \"\",\n      coursenameInp: \"\",\n      profInp: \"\",\n      dateSelect: this.dates[0],\n      difficultyBox: \"\",\n      workloadBox: \"\",\n      lectureBox: \"\",\n      miscBox: \"\"\n    };\n    for (let elem in formElems) {\n      if(localStorage.getItem(elem)){\n        formElems[elem] = localStorage.getItem(elem);\n      }\n    }\n\n    var availProfs;\n    var availCourseNames;\n    const dept = formElems.deptSelect;\n    if (dept == \"\") {\n      availProfs = this.allProfs;\n      availCourseNames = this.allCourseNames;\n    } else {\n      availProfs = Array.from(this.deptMap.get(dept).profs);\n      availCourseNames = Array.from(this.deptMap.get(dept).coursenames);\n    }\n\n    this.state = {\n      availProfs: availProfs,\n      availCourseNames: availCourseNames,\n      ...formElems\n    }\n  }\n  \n  deptChange(e) {\n    const dept = e.target.value;\n    this.setState({availProfs: Array.from(this.deptMap.get(dept).profs),\n                  availCourseNames: Array.from(this.deptMap.get(dept).coursenames)});\n    this.inputChangeHandler(e);\n  }\n\n  inputChangeHandler(e) {\n    this.setState({ [e.target.id]: e.target.value });\n    localStorage.setItem(e.target.id, e.target.value);\n  }\n\n  submitReview() {\n    var review = {\n      dept: this.state.deptSelect.trim(),\n      coursenum: this.state.coursenumInp.trim(),\n      coursename: this.state.coursenameInp.trim(),\n      prof: this.state.profInp.trim(),\n      date: this.state.dateSelect.trim(),\n      datenum: Semester2Num(this.state.dateSelect.trim()),\n      difficulty: this.state.difficultyBox.trim(),\n      workload: this.state.workloadBox.trim(),\n      lecture: this.state.lectureBox.trim(),\n      misc: this.state.miscBox.trim(),\n      reviewer: this.state.reviewerInp.trim(),\n    };\n    var rangeData = {\n      values: [\n        [review.coursenum,\n         review.coursename,\n         review.prof,\n         review.date,\n         review.difficulty,\n         review.workload,\n         review.lecture,\n         review.misc,\n         review.reviewer\n        ]\n      ]\n    };    \n    var params = {\n      spreadsheetId: SPREADSHEET_ID,\n      range: this.state.deptSelect,\n      valueInputOption: 'USER_ENTERED',\n      insertDataOption: 'INSERT_ROWS',\n    };\n\n    window.gapi.client.load(\"sheets\", \"v4\", () => {\n\n      var request = window.gapi.client.sheets.spreadsheets.values.append(params, rangeData);\n      request.then(() => {\n        var formElems = {\n          reviewerInp: \"\",\n          deptSelect: \"\",\n          coursenumInp: \"\",\n          coursenameInp: \"\",\n          profInp: \"\",\n          dateSelect: this.dates[0],\n          difficultyBox: \"\",\n          workloadBox: \"\",\n          lectureBox: \"\",\n          miscBox: \"\"\n        };\n        for (let key in formElems) {\n          localStorage.removeItem(key);\n        }\n        var availProfs = this.allProfs;\n        var availCourseNames = this.allCourseNames;\n        this.setState({\n          availProfs: availProfs,\n          availCourseNames: availCourseNames,\n          ...formElems\n        });\n        this.props.updateReviews(review);\n      }, function(reason) {\n        alert(\"Sorry! Not sure why, but the review could not be sent. Try again later?\");\n        console.error('error: ' + reason.result.error.message);\n      });\n    });\n  }\n\n  onSubmit() {\n    if (this.state.deptSelect == \"\" || this.state.coursenumInp == \"\" ||\n        this.state.coursenameInp == \"\" || this.state.profInp == \"\" || this.state.dateSelect == \"\") {\n      alert(\"Please fill out all required fields.\");\n      return;\n    }\n\n    var user = GoogleAuth.currentUser.get();\n    if (!user.hasGrantedScopes(SCOPES)) {\n      GoogleAuth.signIn().then(() => {\n        this.submitReview();\n      });\n    } else {\n      this.submitReview();\n    }\n\n  }\n\n  render() {\n    return (\n      <div className=\"review-writer\">\n        <label htmlFor=\"reviewerInp\">Reviewer (optional): </label>\n        <input className=\"selector\" id=\"reviewerInp\" onChange={this.inputChangeHandler.bind(this)} value={this.state.reviewerInp}/>\n        <label htmlFor=\"deptSelect\">*Department: </label>\n        <select id=\"deptSelect\" className='selector' required onChange={this.deptChange.bind(this)} value={this.state.deptSelect}>\n          <option disabled></option>\n          {this.allDepts.map(deptname =>\n            <option key={deptname}>{deptname}</option>\n          )}\n        </select>\n        <label htmlFor=\"coursenumInp\">*Course number (e.g. UGS 303): </label>\n        <input className=\"selector\" id=\"coursenumInp\" required onChange={this.inputChangeHandler.bind(this)} value={this.state.coursenumInp}/>\n        <label htmlFor=\"coursenameInp\">*Course name: </label>\n        <input className=\"selector\" id=\"coursenameInp\" required list=\"coursename\" onChange={this.inputChangeHandler.bind(this)} value={this.state.coursenameInp}/>  \n          <datalist id=\"coursename\">\n            {this.state.availCourseNames.map(cn =>\n              <option key={cn} value={cn}/>\n            )}\n          </datalist>\n        <label htmlFor=\"profInp\">*Professor (last name): </label>\n        <input className=\"selector\" id=\"profInp\" required list=\"prof\" onChange={this.inputChangeHandler.bind(this)} value={this.state.profInp}/>\n          <datalist id=\"prof\">\n            {this.state.availProfs.map(prof =>\n              <option key={prof} value={prof}/>\n            )}\n          </datalist>\n        <label htmlFor=\"dateSelect\">*Date taken: </label>\n        <select id=\"dateSelect\" className='selector' required onChange={this.inputChangeHandler.bind(this)} value={this.state.dateSelect}>\n          {this.dates.map(date =>\n            <option key={date}>{date}</option>\n          )}\n        </select>\n        <label htmlFor=\"difficultyBox\">Difficulty: </label>\n        <TextareaAutosize\n          id=\"difficultyBox\"\n          style={{width:\"90%\", resize:\"none\"}}\n          minRows={5}\n          maxRows={15}\n          placeholder=\"How hard are the concepts/workload? Is it hard to get a good grade? Etc.\"\n          className=\"selector\"\n          onChange={this.inputChangeHandler.bind(this)}\n          value={this.state.difficultyBox}\n        />\n        <label htmlFor=\"workloadBox\">Workload: </label>\n        <TextareaAutosize\n          id=\"workloadBox\"\n          style={{width:\"90%\", resize:\"none\"}}\n          minRows={5}\n          maxRows={15}\n          placeholder=\"What types of assignments are there? How many hours a week do they take? Etc.\"\n          className=\"selector\"\n          onChange={this.inputChangeHandler.bind(this)}\n          value={this.state.workloadBox}\n        />\n        <label htmlFor=\"lectureBox\">Lectures: </label>\n        <TextareaAutosize\n          id=\"lectureBox\"\n          style={{width:\"90%\", resize:\"none\"}}\n          minRows={5}\n          maxRows={15}\n          placeholder=\"How were lectures? Worth/required to go to class? Etc.\"\n          className=\"selector\"\n          onChange={this.inputChangeHandler.bind(this)}\n          value={this.state.lectureBox}\n        />\n        <label htmlFor=\"miscBox\">Miscellaneous: </label>\n        <TextareaAutosize\n          id=\"miscBox\"\n          style={{width:\"90%\", resize:\"none\"}}\n          minRows={5}\n          maxRows={15}\n          className=\"selector\"\n          onChange={this.inputChangeHandler.bind(this)}\n          value={this.state.miscBox}\n        />\n        <button type=\"submit\" id='submitButton' className={this.state.darkMode ? 'dark-mode': null} onClick={this.onSubmit.bind(this)}>Submit!</button>\n        <div style={{minHeight: \"20vh\"}}/>\n      </div>\n    );\n  }\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    var darkmode;\n    if(localStorage.getItem(\"theme\") == \"dark\"){\n      darkmode = true;\n      document.documentElement.setAttribute('data-theme', 'dark');\n    } else {\n      darkmode = false;\n      document.documentElement.setAttribute('data-theme', 'light');\n    }\n    this.state = {\n      isLoading: true,\n      readMode: true,\n      reviews: [],\n      darkMode: darkmode\n    };\n  }\n\n  addReview(rev) {\n    this.setState(state => {\n      rev.reviewID = state.reviews.length;\n      var newReviews = [...state.reviews, rev];\n      newReviews.sort((rev1, rev2) => rev2.datenum - rev1.datenum);\n      return {reviews: newReviews};\n    });    \n  }\n\n  readData2() {\n    fetch('./reviews.json').then((response) => {\n      return response.json();\n    }).then((reviews) => {\n      this.setState({reviews: reviews, isLoading: false});\n    })\n  }\n\n  async readData() {\n    const API_KEY = await readKey();\n    window.gapi.client.init({\n      apiKey: API_KEY,\n      clientId: CLIENT_ID,\n      scope: SCOPES\n    }).then(() => {\n        GoogleAuth = window.gapi.auth2.getAuthInstance();\n        var path = `https://sheets.googleapis.com/v4/spreadsheets/${SPREADSHEET_ID}`\n        return window.gapi.client.request({\n            \"path\": path,\n            \"method\": \"GET\",\n            \"params\": {\n                \"key\": API_KEY\n            }\n        });\n    }).then((response) => {\n      var sheets = response.result.sheets.filter(sheet => sheet.properties.title != \"FRI\");\n      var titles = Array.from(sheets, sheet => (sheet.properties.title));\n      var data = Array.from(sheets, sheet => {\n        var title = sheet.properties.title;\n        var path = `https://sheets.googleapis.com/v4/spreadsheets/${SPREADSHEET_ID}/values/${title}`\n        return window.gapi.client.request({\n          path: path,\n          method: \"GET\",\n          params: {\n              key: API_KEY\n          }\n        });\n      });\n      Promise.all(data).then((data) => {\n        var reviews = [];\n        let revCount = 0;\n        for (let i=0; i<data.length; i++) {\n          let sheet = data[i].result.values.slice(2);\n          for (var row of sheet) {\n            if (row.length < 9) {\n              let l = 9 - row.length\n              row.push(...Array.from({length: l}, () => \"\"))\n            }\n            var rev = {\n              dept: titles[i].trim(),\n              coursenum: row[0].trim(),\n              coursename: row[1].trim(),\n              prof: row[2].trim(),\n              date: row[3].trim(),\n              datenum: Semester2Num(row[3].trim()),\n              difficulty: row[4].trim(),\n              workload: row[5].trim(),\n              lecture: row[6].trim(),\n              misc: row[7].trim(),\n              reviewer: row[8].trim(),\n              reviewID: `rev${revCount}`\n            };\n            reviews.push(rev);\n            revCount += 1;\n          }\n        }\n        reviews.sort((rev1, rev2) => rev2.datenum - rev1.datenum);\n        this.setState({reviews: reviews, isLoading: false});\n      }, (error) => {\n        console.log(error)\n      })\n    }, function(error) {\n        console.log(error);\n    });\n  }\n\n  componentDidMount() {\n    const script = document.createElement(\"script\");\n    script.src = \"https://apis.google.com/js/api.js\";\n    script.async = true;\n    script.onload = () => {\n      window.gapi.load('client:auth2', ()=>{\n        this.readData();\n      });\n    };\n    document.body.appendChild(script);\n  }\n\n  toggleDarkMode() {\n    this.setState(state => {\n      if (!state.darkMode) {\n        localStorage.setItem('theme', 'dark');\n        document.documentElement.setAttribute('data-theme', 'dark');\n      } else {\n        localStorage.setItem('theme', 'light');\n        document.documentElement.setAttribute('data-theme', 'light');\n      }\n      return ({darkMode: !state.darkMode});\n    });\n  }\n\n  toggleReadMode() {\n    this.setState(state => ({readMode: !state.readMode}));\n  }\n  \n  render() {\n    if (this.state.isLoading) {\n      return (\n        <div className='App'>\n          <div className='column'>\n            <h1>Loading...</h1>\n          </div>\n        </div>\n      );\n    }\n    var content;\n    var btn;\n    if (this.state.readMode) {\n      content = <ReviewReader reviews={this.state.reviews}></ReviewReader>;\n      btn = \"Submit a review!\";\n    } else {\n      content = <ReviewWriter reviews={this.state.reviews} updateReviews={this.addReview.bind(this)}></ReviewWriter>;\n      btn = \"Return to search\"\n    }\n    return (\n      <div className='App'>\n        <FaAdjust size={32} id='darkmodeButton' onClick={() => this.toggleDarkMode()}/>\n        <div className='column'>\n          <h1>DS Course Reviews</h1>\n          <button id='rwButton' onClick={() => this.toggleReadMode()}>{btn}</button>\n          {content}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}