{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["readKey","a","fetch","then","response","json","kv","key","SPREADSHEET_ID","Semester2Num","date","arr","toLowerCase","split","length","sem","year","parseInt","isNaN","Review","props","reviewer","misc","className","coursenum","coursename","prof","difficulty","workload","lecture","ReviewReader","allDeptNames","Map","allCoursenums","allProfs","reviews","review","dept","has","get","push","set","cn","deptList","Array","from","keys","sort","state","course","search","availProfs","availCourses","availReviews","numRevShown","e","this","setState","target","value","updateReviews","filter","map","Set","includes","onChange","deptChange","bind","deptname","courseChange","profChange","type","placeholder","searchChange","pageStart","loadMore","loadMoreReviews","hasMore","loader","slice","reviewID","React","Component","ReviewWriter","allDepts","rev","allCourseNames","deptMap","profs","add","coursenames","forEach","v","k","today","Date","dates","month","getMonth","getFullYear","i","availCourseNames","formElems","reviewerInp","deptSelect","coursenumInp","coursenameInp","profInp","dateSelect","difficultyBox","workloadBox","lectureBox","miscBox","elem","localStorage","getItem","inputChangeHandler","id","setItem","alert","trim","datenum","rangeData","values","params","spreadsheetId","range","valueInputOption","insertDataOption","window","gapi","client","load","sheets","spreadsheets","append","removeItem","reason","console","error","result","message","htmlFor","required","disabled","list","style","width","resize","minRows","maxRows","darkMode","onClick","submitReview","minHeight","App","darkmode","document","documentElement","setAttribute","isLoading","readMode","newReviews","rev1","rev2","API_KEY","init","apiKey","clientId","scope","path","request","sheet","properties","title","titles","data","method","Promise","all","revCount","row","l","log","script","createElement","src","async","onload","readData","body","appendChild","content","btn","addReview","size","toggleDarkMode","toggleReadMode","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.d9823a44.chunk.js","sourcesContent":["import React from 'react';\nimport {FaAdjust, FaKickstarterK} from 'react-icons/fa'\nimport InfiniteScroll from 'react-infinite-scroller';\nimport TextareaAutosize from 'react-textarea-autosize'\nimport './App.css';\n\nasync function readKey() {\n  return await fetch('./api.config').then((response) => {\n    return response.json();\n  }).then(kv => {return kv.key});\n}\n\nconst CLIENT_ID = '515215863375-ane9fqmjm48innd6mc3fh6l38qihpai0.apps.googleusercontent.com';\nconst SCOPES = \"https://www.googleapis.com/auth/drive.file\";\nconst SPREADSHEET_ID = '1AJO52gUTAElYGcfGMK07YkEfWdYNEITkjzS8hhOFTww';\n\nfunction Semester2Num(date) {\n  var arr = date.toLowerCase().split(/\\s+/);\n  if (arr.length >=2) {\n    var sem = arr[0];\n    var year = parseInt(arr[1]);\n    if (isNaN(year)) {return 0;}\n    if (sem == \"spring\") {\n      return year + 0.1;\n    }\n    if (sem == \"summer\") {\n      return year + 0.2;\n    }\n    if (sem == \"fall\") {\n      return year + 0.3;\n    }\n    return year + 0.4;\n  }\n  return 0;\n}\n\nfunction Review(props){\n  var reviewer = props.reviewer ? <p><b>Reviewer: </b>{props.reviewer}</p> : null;\n  var misc = props.misc ? <p><b>Miscellaneous: </b>{props.misc}</p> : null;\n  return (\n    <div className=\"review\">\n      <h2>{props.coursenum} {props.coursename} <br />\n      {props.prof}, {props.date}</h2>\n      {reviewer}\n      <p><b>Difficulty: </b>{props.difficulty}</p>\n      <p><b>Workload: </b>{props.workload}</p>\n      <p><b>Lectures: </b>{props.lecture}</p>\n      {misc}\n    </div>\n  );\n}\n\nclass ReviewReader extends React.Component {\n\n  constructor(props) {\n    super(props);\n    var allDeptNames = new Map();\n    var allCoursenums = new Map();\n    var allProfs = new Map();\n    for (let review of props.reviews) {\n      let dept = review.dept;\n      if (allDeptNames.has(dept)) {\n        allDeptNames.get(dept).push(review)\n      } else {\n        allDeptNames.set(dept, [review])\n      }\n      let cn = review.coursenum;\n      if (allCoursenums.has(cn)) {\n        allCoursenums.get(cn).push(review)\n      } else {\n        allCoursenums.set(cn, [review])\n      }\n      let prof = review.prof;\n      if (allProfs.has(prof)) {\n        allProfs.get(prof).push(review)\n      } else {\n        allProfs.set(prof, [review])\n      }\n    }\n    this.allDeptNames = allDeptNames\n    this.allCoursenums = allCoursenums;\n    this.allProfs = allProfs;\n    this.deptList = Array.from(this.allDeptNames.keys()).sort();\n    this.state = {\n      dept: \"\",\n      course: \"\",\n      prof: \"\",\n      search: \"\",\n      availProfs: Array.from(this.allProfs.keys()).sort(),\n      availCourses: Array.from(this.allCoursenums.keys()).sort(),\n      availReviews: this.props.reviews,\n      numRevShown: 20\n    }\n  }\n\n  deptChange(e) {\n    this.setState({dept: e.target.value, course: \"\", prof: \"\"});\n    this.setState((state) => this.updateReviews(state));\n  }\n\n  courseChange(e) {\n    if (this.state.dept == \"\") {\n      let dept = this.allCoursenums.get(e.target.value)[0].dept;\n      this.setState({dept: dept, course: e.target.value});\n    } else {\n      this.setState({course: e.target.value});\n    }\n    this.setState((state) => this.updateReviews(state));\n  }\n\n  profChange(e) {\n    if (this.state.dept == \"\") {\n      let dept = this.allProfs.get(e.target.value)[0].dept;\n      this.setState({dept: dept, prof: e.target.value});\n    } else {\n      this.setState({prof: e.target.value});\n    }\n    this.setState((state) => this.updateReviews(state));\n  }\n\n  searchChange(e) {\n    this.setState({search: e.target.value});\n    this.setState((state) => this.updateReviews(state));\n  }\n\n  updateReviews(state) {\n    var reviews = this.props.reviews;\n    var availCourses;\n    var availProfs;\n    if (state.dept == \"\") {\n      availCourses = Array.from(this.allCoursenums.keys()).sort();\n      availProfs = Array.from(this.allProfs.keys()).sort();\n    } else {\n      reviews = this.allDeptNames.get(state.dept);\n      availCourses = reviews.filter(review => {\n          return state.prof == \"\" || review.prof == state.prof\n        }).map(review => {\n          return review.coursenum;\n      });\n      availProfs = reviews.filter(review => {\n          return state.course == \"\" || review.coursenum == state.course\n        }).map(review => {\n          return review.prof;\n      });\n      availCourses = Array.from(new Set(availCourses)).sort();\n      availProfs = Array.from(new Set(availProfs)).sort();\n    }\n    reviews = reviews.filter(review => {\n      return (state.prof == \"\" || review.prof == state.prof)\n        && (state.course == \"\" || review.coursenum == state.course)\n        && (state.search == \"\" || review.coursename.toLowerCase().includes(state.search));\n    });\n    return ({availCourses: availCourses, availProfs: availProfs,\n      availReviews: reviews, numRevShown: 20})\n  }\n\n  loadMoreReviews() {\n    if (this.state.numRevShown + 20 < this.state.availReviews.length) {\n      this.setState(state => ({\n        numRevShown: state.numRevShown + 20\n      }));\n    }\n    else {\n      this.setState(state => ({\n        numRevShown: state.availReviews.length\n      }));\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"review-reader\">\n        <select className='selector' value={this.state.dept} onChange={this.deptChange.bind(this)}>\n          <option key=\"\" value=\"\"> [All departments] </option>\n          {this.deptList.map(deptname =>\n            <option key={deptname}>{deptname}</option>\n          )}\n        </select>\n        <select className='selector' value={this.state.course} onChange={this.courseChange.bind(this)}>\n          <option key=\"\" value=\"\"> [All courses] </option>\n          {this.state.availCourses.map(cn =>\n            <option key={cn}>{cn}</option>\n          )}\n        </select>\n        <select className='selector' value={this.state.prof} onChange={this.profChange.bind(this)}>\n          <option key=\"\" value=\"\"> [All professors] </option>\n          {this.state.availProfs.map(prof =>\n            <option key={prof}>{prof}</option>\n          )}\n        </select>\n        <input className='selector' type=\"text\" placeholder=\"Course name search\" onChange={this.searchChange.bind(this)}/>\n        <InfiniteScroll\n            pageStart={0}\n            loadMore={this.loadMoreReviews.bind(this)}\n            hasMore={this.state.availReviews.length != this.state.numRevShown}\n            loader={<div className=\"loader\" key={0}>Loading ...</div>}\n        >\n            {this.state.availReviews.slice(0, this.state.numRevShown).map(review => <Review key={review.reviewID} {...review}/>)}\n        </InfiniteScroll>\n      </div>\n    );\n  }\n}\n\nclass ReviewWriter extends React.Component {\n  constructor(props) {\n    super(props);\n    this.allDepts = Array.from(new Set(props.reviews.map(rev => rev.dept))).sort();\n    this.allProfs = Array.from(new Set(props.reviews.map(rev => rev.prof))).sort()\n    this.allCourseNames = Array.from(new Set(props.reviews.map(rev => rev.coursename))).sort();\n    var deptMap = new Map();\n    for (let review of props.reviews) {\n      let dept = review.dept;\n      if (deptMap.has(dept)) {\n        deptMap.get(dept).profs.add(review.prof);\n        deptMap.get(dept).coursenames.add(review.coursename);\n      } else {\n        deptMap.set(dept, {profs: new Set([review.prof]),\n                           coursenames: new Set([review.coursename])});\n      }\n    }\n    deptMap.forEach((v, k, map) => {\n      map.set(k, {profs: Array.from(v.profs).sort(),\n                  coursenames: Array.from(v.coursenames).sort()});\n    });\n    this.deptMap = deptMap;\n\n    var today = new Date();\n    this.dates = []\n    var month = today.getMonth() + 1;\n    var year = today.getFullYear();\n    for (var i=0; i<12; i++) {\n      if (month > 8 || month < 2) {\n        this.dates.push(`Fall ${year}`);\n        month = 8;\n      }\n      else if (month > 6) {\n        this.dates.push(`Summer ${year}`);\n        month = 6;\n        }\n      else {\n        this.dates.push(`Spring ${year}`);\n        month = 10;\n        year -= 1;\n      }\n    }\n\n    var formElems = {\n      reviewerInp: \"\",\n      deptSelect: \"\",\n      coursenumInp: \"\",\n      coursenameInp: \"\",\n      profInp: \"\",\n      dateSelect: this.dates[0],\n      difficultyBox: \"\",\n      workloadBox: \"\",\n      lectureBox: \"\",\n      miscBox: \"\"\n    };\n    for (let elem in formElems) {\n      if(localStorage.getItem(elem)){\n        formElems[elem] = localStorage.getItem(elem);\n      }\n    }\n\n    var availProfs;\n    var availCourseNames;\n    const dept = formElems.deptSelect;\n    if (dept == \"\") {\n      availProfs = this.allProfs;\n      availCourseNames = this.allCourseNames;\n    } else {\n      availProfs = Array.from(this.deptMap.get(dept).profs);\n      availCourseNames = Array.from(this.deptMap.get(dept).coursenames);\n    }\n\n    this.state = {\n      availProfs: availProfs,\n      availCourseNames: availCourseNames,\n      ...formElems\n    }\n  }\n  \n  deptChange(e) {\n    const dept = e.target.value;\n    this.setState({availProfs: Array.from(this.deptMap.get(dept).profs),\n                  availCourseNames: Array.from(this.deptMap.get(dept).coursenames)});\n    this.inputChangeHandler(e);\n  }\n\n  inputChangeHandler(e) {\n    this.setState({ [e.target.id]: e.target.value });\n    localStorage.setItem(e.target.id, e.target.value);\n  }\n\n  async submitReview() {\n    if (this.state.deptSelect == \"\" || this.state.coursenumInp == \"\" ||\n        this.state.coursenameInp == \"\" || this.state.profInp == \"\" || this.state.dateSelect == \"\") {\n      alert(\"Please fill out all required fields.\");\n      return;\n    }\n    var review = {\n      dept: this.state.deptSelect.trim(),\n      coursenum: this.state.coursenumInp.trim(),\n      coursename: this.state.coursenameInp.trim(),\n      prof: this.state.profInp.trim(),\n      date: this.state.dateSelect.trim(),\n      datenum: Semester2Num(this.state.dateSelect.trim()),\n      difficulty: this.state.difficultyBox.trim(),\n      workload: this.state.workloadBox.trim(),\n      lecture: this.state.lectureBox.trim(),\n      misc: this.state.miscBox.trim(),\n      reviewer: this.state.reviewerInp.trim(),\n    };\n    var rangeData = {\n      values: [\n        [review.coursenum,\n         review.coursename,\n         review.prof,\n         review.date,\n         review.difficulty,\n         review.workload,\n         review.lecture,\n         review.misc,\n         review.reviewer\n        ]\n      ]\n    };    \n    var params = {\n      spreadsheetId: SPREADSHEET_ID,\n      range: this.state.deptSelect,\n      valueInputOption: 'USER_ENTERED',\n      insertDataOption: 'INSERT_ROWS',\n    };\n\n    window.gapi.client.load(\"sheets\", \"v4\", () => {\n      var request = window.gapi.client.sheets.spreadsheets.values.append(params, rangeData);\n      request.then(() => {\n        var formElems = {\n          reviewerInp: \"\",\n          deptSelect: \"\",\n          coursenumInp: \"\",\n          coursenameInp: \"\",\n          profInp: \"\",\n          dateSelect: this.dates[0],\n          difficultyBox: \"\",\n          workloadBox: \"\",\n          lectureBox: \"\",\n          miscBox: \"\"\n        };\n        for (let key in formElems) {\n          localStorage.removeItem(key);\n        }\n        var availProfs = this.allProfs;\n        var availCourseNames = this.allCourseNames;\n        this.setState({\n          availProfs: availProfs,\n          availCourseNames: availCourseNames,\n          ...formElems\n        });\n        this.props.updateReviews(review);\n      }, function(reason) {\n        alert(\"Sorry! Not sure why, but the review could not be sent. Try again later?\");\n        console.error('error: ' + reason.result.error.message);\n      });\n    });\n\n  }\n\n  render() {\n    return (\n      <div className=\"review-writer\">\n        <label htmlFor=\"reviewerInp\">Reviewer (optional): </label>\n        <input className=\"selector\" id=\"reviewerInp\" onChange={this.inputChangeHandler.bind(this)} value={this.state.reviewerInp}/>\n        <label htmlFor=\"deptSelect\">*Department: </label>\n        <select id=\"deptSelect\" className='selector' required onChange={this.deptChange.bind(this)} value={this.state.deptSelect}>\n          <option disabled></option>\n          {this.allDepts.map(deptname =>\n            <option key={deptname}>{deptname}</option>\n          )}\n        </select>\n        <label htmlFor=\"coursenumInp\">*Course number: </label>\n        <input className=\"selector\" id=\"coursenumInp\" required onChange={this.inputChangeHandler.bind(this)} value={this.state.coursenumInp}/>\n        <label htmlFor=\"coursenameInp\">*Course name: </label>\n        <input className=\"selector\" id=\"coursenameInp\" required list=\"coursename\" onChange={this.inputChangeHandler.bind(this)} value={this.state.coursenameInp}/>  \n          <datalist id=\"coursename\">\n            {this.state.availCourseNames.map(cn =>\n              <option key={cn} value={cn}/>\n            )}\n          </datalist>\n        <label htmlFor=\"profInp\">*Professor (last name only): </label>\n        <input className=\"selector\" id=\"profInp\" required list=\"prof\" onChange={this.inputChangeHandler.bind(this)} value={this.state.profInp}/>\n          <datalist id=\"prof\">\n            {this.state.availProfs.map(prof =>\n              <option key={prof} value={prof}/>\n            )}\n          </datalist>\n        <label htmlFor=\"dateSelect\">*Date taken: </label>\n        <select id=\"dateSelect\" className='selector' required onChange={this.inputChangeHandler.bind(this)} value={this.state.dateSelect}>\n          {this.dates.map(date =>\n            <option key={date}>{date}</option>\n          )}\n        </select>\n        <label htmlFor=\"difficultyBox\">Difficulty: </label>\n        <TextareaAutosize\n          id=\"difficultyBox\"\n          style={{width:\"90%\", resize:\"none\"}}\n          minRows={5}\n          maxRows={15}\n          placeholder=\"How hard are the concepts/workload? Is it hard to get a good grade? Etc.\"\n          className=\"selector\"\n          onChange={this.inputChangeHandler.bind(this)}\n          value={this.state.difficultyBox}\n        />\n        <label htmlFor=\"workloadBox\">Workload: </label>\n        <TextareaAutosize\n          id=\"workloadBox\"\n          style={{width:\"90%\", resize:\"none\"}}\n          minRows={5}\n          maxRows={15}\n          placeholder=\"What types of assignments are there? How many hours a week do they take? Etc.\"\n          className=\"selector\"\n          onChange={this.inputChangeHandler.bind(this)}\n          value={this.state.workloadBox}\n        />\n        <label htmlFor=\"lectureBox\">Lectures: </label>\n        <TextareaAutosize\n          id=\"lectureBox\"\n          style={{width:\"90%\", resize:\"none\"}}\n          minRows={5}\n          maxRows={15}\n          placeholder=\"How were lectures? Worth/required to go to class? Etc.\"\n          className=\"selector\"\n          onChange={this.inputChangeHandler.bind(this)}\n          value={this.state.lectureBox}\n        />\n        <label htmlFor=\"miscBox\">Miscellaneous: </label>\n        <TextareaAutosize\n          id=\"miscBox\"\n          style={{width:\"90%\", resize:\"none\"}}\n          minRows={5}\n          maxRows={15}\n          className=\"selector\"\n          onChange={this.inputChangeHandler.bind(this)}\n          value={this.state.miscBox}\n        />\n        <button type=\"submit\" id='submitButton' className={this.state.darkMode ? 'dark-mode': null} onClick={this.submitReview.bind(this)}>Submit!</button>\n        <div style={{minHeight: \"20vh\"}}/>\n      </div>\n    );\n  }\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    var darkmode;\n    if(localStorage.getItem(\"theme\")){\n      if(localStorage.getItem(\"theme\") == \"dark\"){\n          darkmode = true;\n          document.documentElement.setAttribute('data-theme', 'dark');\n      }\n    } else {\n      darkmode = false;\n      document.documentElement.setAttribute('data-theme', 'light');\n    }\n    this.state = {\n      isLoading: true,\n      readMode: true,\n      reviews: [],\n      darkMode: darkmode\n    };\n  }\n\n  addReview(rev) {\n    this.setState(state => {\n      rev.reviewID = state.reviews.length;\n      var newReviews = [...state.reviews, rev];\n      newReviews.sort((rev1, rev2) => rev2.datenum - rev1.datenum);\n      return {reviews: newReviews};\n    });    \n  }\n\n  readData2() {\n    fetch('./reviews.json').then((response) => {\n      return response.json();\n    }).then((reviews) => {\n      this.setState({reviews: reviews, isLoading: false});\n    })\n  }\n\n  async readData() {\n    const API_KEY = await readKey();\n    window.gapi.client.init({\n      apiKey: API_KEY,\n      clientId: CLIENT_ID,\n      scope: SCOPES\n    }).then(() => {\n        var path = `https://sheets.googleapis.com/v4/spreadsheets/${SPREADSHEET_ID}`\n        return window.gapi.client.request({\n            \"path\": path,\n            \"method\": \"GET\",\n            \"params\": {\n                \"key\": API_KEY\n            }\n        });\n    }).then((response) => {\n      var sheets = response.result.sheets.filter(sheet => sheet.properties.title != \"FRI\");\n      var titles = Array.from(sheets, sheet => (sheet.properties.title));\n      var data = Array.from(sheets, sheet => {\n        var title = sheet.properties.title;\n        var path = `https://sheets.googleapis.com/v4/spreadsheets/${SPREADSHEET_ID}/values/${title}`\n        return window.gapi.client.request({\n          path: path,\n          method: \"GET\",\n          params: {\n              key: API_KEY\n          }\n        });\n      });\n      Promise.all(data).then((data) => {\n        var reviews = [];\n        let revCount = 0;\n        for (let i=0; i<data.length; i++) {\n          let sheet = data[i].result.values.slice(2);\n          for (var row of sheet) {\n            if (row.length < 9) {\n              let l = 9 - row.length\n              row.push(...Array.from({length: l}, () => \"\"))\n            }\n            var rev = {\n              dept: titles[i].trim(),\n              coursenum: row[0].trim(),\n              coursename: row[1].trim(),\n              prof: row[2].trim(),\n              date: row[3].trim(),\n              datenum: Semester2Num(row[3].trim()),\n              difficulty: row[4].trim(),\n              workload: row[5].trim(),\n              lecture: row[6].trim(),\n              misc: row[7].trim(),\n              reviewer: row[8].trim(),\n              reviewID: `rev${revCount}`\n            };\n            reviews.push(rev);\n            revCount += 1;\n          }\n        }\n        reviews.sort((rev1, rev2) => rev2.datenum - rev1.datenum);\n        this.setState({reviews: reviews, isLoading: false});\n      }, (error) => {\n        console.log(error)\n      })\n    }, function(error) {\n        console.log(error);\n    });\n  }\n\n  componentDidMount() {\n    const script = document.createElement(\"script\");\n    script.src = \"https://apis.google.com/js/api.js\";\n    script.async = true;\n    script.onload = () => {\n      window.gapi.load('client', ()=>{this.readData()})\n    };\n\n    document.body.appendChild(script);\n  }\n\n  toggleDarkMode() {\n    this.setState(state => {\n      if (state.darkMode) {\n        localStorage.setItem('theme', 'dark');\n        document.documentElement.setAttribute('data-theme', 'dark');\n      } else {\n        localStorage.setItem('theme', 'light');\n        document.documentElement.setAttribute('data-theme', 'light');\n      }\n      return ({darkMode: !state.darkMode});\n    });\n  }\n\n  toggleReadMode() {\n    this.setState(state => ({readMode: !state.readMode}));\n  }\n  \n  render() {\n    if (this.state.isLoading) {\n      return (\n        <div className='App'>\n          <div className='column'>\n            <h1>Loading...</h1>\n          </div>\n        </div>\n      );\n    }\n    var content;\n    var btn;\n    if (this.state.readMode) {\n      content = <ReviewReader reviews={this.state.reviews}></ReviewReader>;\n      btn = \"Submit a review!\";\n    } else {\n      content = <ReviewWriter reviews={this.state.reviews} updateReviews={this.addReview.bind(this)}></ReviewWriter>;\n      btn = \"Return to search\"\n    }\n    return (\n      <div className='App'>\n        <FaAdjust size={32} id='darkmodeButton' onClick={() => this.toggleDarkMode()}/>\n        <div className='column'>\n          <h1>DS Course Reviews</h1>\n          <button id='rwButton' onClick={() => this.toggleReadMode()}>{btn}</button>\n          {content}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}