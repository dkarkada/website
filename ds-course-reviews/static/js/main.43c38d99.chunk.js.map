{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["Review","props","reviewer","misc","className","coursenum","coursename","prof","date","difficulty","workload","lecture","Semester2Num","arr","toLowerCase","split","length","sem","year","parseInt","isNaN","ReviewReader","allDeptNames","Map","allCoursenums","allProfs","reviews","review","dept","has","get","push","set","cn","deptList","Array","from","keys","sort","state","course","search","availProfs","availCourses","availReviews","numRevShown","e","this","setState","target","value","updateReviews","console","log","filter","map","Set","includes","onChange","deptChange","bind","key","deptname","courseChange","profChange","type","placeholder","searchChange","pageStart","loadMore","loadMoreReviews","hasMore","loader","slice","reviewID","React","Component","ReviewWriter","rev","deptMap","coursenums","add","profs","coursenames","availCourseNames","today","Date","dates","month","getMonth","getFullYear","i","for","id","required","disabled","selected","list","style","height","width","resize","minRows","maxRows","darkMode","onClick","toggleReadMode","App","localStorage","getItem","document","documentElement","setAttribute","isLoading","readMode","fetch","then","response","json","kv","readKey","API_KEY","SPREADSHEET_ID","window","gapi","client","init","apiKey","path","request","sheets","result","titles","sheet","properties","title","data","Promise","all","revCount","values","row","l","trim","datenum","rev1","rev2","error","script","createElement","src","async","onload","load","readData","body","appendChild","setItem","content","btn","size","toggleDarkMode","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.43c38d99.chunk.js","sourcesContent":["import React from 'react';\nimport {FaAdjust} from 'react-icons/fa'\nimport InfiniteScroll from 'react-infinite-scroller';\nimport TextareaAutosize from 'react-textarea-autosize'\nimport './App.css';\n\nfunction Review(props){\n  var reviewer = props.reviewer ? <p><b>Reviewer: </b>{props.reviewer}</p> : null;\n  var misc = props.misc ? <p><b>Miscellaneous: </b>{props.misc}</p> : null;\n  return (\n    <div className=\"review\">\n      <h2>{props.coursenum} {props.coursename} <br />\n      {props.prof}, {props.date}</h2>\n      {reviewer}\n      <p><b>Difficulty: </b>{props.difficulty}</p>\n      <p><b>Workload: </b>{props.workload}</p>\n      <p><b>Lectures: </b>{props.lecture}</p>\n      {misc}\n    </div>\n  );\n}\n\nfunction Semester2Num(date) {\n  var arr = date.toLowerCase().split(/\\s+/);\n  if (arr.length >=2) {\n    var sem = arr[0];\n    var year = parseInt(arr[1]);\n    if (isNaN(year)) {return 0;}\n    if (sem == \"spring\") {\n      return year + 0.1;\n    }\n    if (sem == \"summer\") {\n      return year + 0.2;\n    }\n    if (sem == \"fall\") {\n      return year + 0.3;\n    }\n    return year + 0.4;\n  }\n  return 0;\n}\n\nclass ReviewReader extends React.Component {\n\n  constructor(props) {\n    super(props);\n    var allDeptNames = new Map();\n    var allCoursenums = new Map();\n    var allProfs = new Map();\n    for (let review of props.reviews) {\n      let dept = review.dept;\n      if (allDeptNames.has(dept)) {\n        allDeptNames.get(dept).push(review)\n      } else {\n        allDeptNames.set(dept, [review])\n      }\n      let cn = review.coursenum;\n      if (allCoursenums.has(cn)) {\n        allCoursenums.get(cn).push(review)\n      } else {\n        allCoursenums.set(cn, [review])\n      }\n      let prof = review.prof;\n      if (allProfs.has(prof)) {\n        allProfs.get(prof).push(review)\n      } else {\n        allProfs.set(prof, [review])\n      }\n    }\n    this.allDeptNames = allDeptNames\n    this.allCoursenums = allCoursenums;\n    this.allProfs = allProfs;\n    this.deptList = Array.from(this.allDeptNames.keys()).sort();\n    this.state = {\n      dept: \"\",\n      course: \"\",\n      prof: \"\",\n      search: \"\",\n      availProfs: Array.from(this.allProfs.keys()).sort(),\n      availCourses: Array.from(this.allCoursenums.keys()).sort(),\n      availReviews: this.props.reviews,\n      numRevShown: 20\n    }\n  }\n\n  deptChange(e) {\n    this.setState({dept: e.target.value, course: \"\", prof: \"\"});\n    this.setState((state) => this.updateReviews(state));\n  }\n\n  courseChange(e) {\n    if (this.state.dept == \"\") {\n      let dept = this.allCoursenums.get(e.target.value)[0].dept;\n      this.setState({dept: dept, course: e.target.value});\n    } else {\n      this.setState({course: e.target.value});\n    }\n    this.setState((state) => this.updateReviews(state));\n  }\n\n  profChange(e) {\n    if (this.state.dept == \"\") {\n      let dept = this.allProfs.get(e.target.value)[0].dept;\n      this.setState({dept: dept, prof: e.target.value});\n    } else {\n      this.setState({prof: e.target.value});\n    }\n    this.setState((state) => this.updateReviews(state));\n  }\n\n  searchChange(e) {\n    this.setState({search: e.target.value});\n    this.setState((state) => this.updateReviews(state));\n  }\n\n  updateReviews(state) {\n    console.log('a')\n    var reviews = this.props.reviews;\n    var availCourses;\n    var availProfs;\n    if (state.dept == \"\") {\n      availCourses = Array.from(this.allCoursenums.keys()).sort();\n      availProfs = Array.from(this.allProfs.keys()).sort();\n    } else {\n      reviews = this.allDeptNames.get(state.dept);\n      availCourses = reviews.filter(review => {\n          return state.prof == \"\" || review.prof == state.prof\n        }).map(review => {\n          return review.coursenum;\n      });\n      availProfs = reviews.filter(review => {\n          return state.course == \"\" || review.coursenum == state.course\n        }).map(review => {\n          return review.prof;\n      });\n      availCourses = Array.from(new Set(availCourses)).sort();\n      availProfs = Array.from(new Set(availProfs)).sort();\n    }\n    reviews = reviews.filter(review => {\n      return (state.prof == \"\" || review.prof == state.prof)\n        && (state.course == \"\" || review.coursenum == state.course)\n        && (state.search == \"\" || review.coursename.toLowerCase().includes(state.search));\n    });\n    return ({availCourses: availCourses, availProfs: availProfs,\n      availReviews: reviews, numRevShown: 20})\n  }\n\n  loadMoreReviews() {\n    console.log('loading more');\n    if (this.state.numRevShown + 20 < this.state.availReviews.length) {\n      this.setState(state => ({\n        numRevShown: state.numRevShown + 20\n      }));\n    }\n    else {\n      this.setState(state => ({\n        numRevShown: state.availReviews.length\n      }));\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"review-reader\">\n        <select className='selector' value={this.state.dept} onChange={this.deptChange.bind(this)}>\n          <option key=\"\" value=\"\"> [All departments] </option>\n          {this.deptList.map(deptname =>\n            <option key={deptname}>{deptname}</option>\n          )}\n        </select>\n        <select className='selector' value={this.state.course} onChange={this.courseChange.bind(this)}>\n          <option key=\"\" value=\"\"> [All courses] </option>\n          {this.state.availCourses.map(cn =>\n            <option key={cn}>{cn}</option>\n          )}\n        </select>\n        <select className='selector' value={this.state.prof} onChange={this.profChange.bind(this)}>\n          <option key=\"\" value=\"\"> [All professors] </option>\n          {this.state.availProfs.map(prof =>\n            <option key={prof}>{prof}</option>\n          )}\n        </select>\n        <input className='selector' type=\"text\" placeholder=\"Course name search\" onChange={this.searchChange.bind(this)}/>\n        <InfiniteScroll\n            pageStart={0}\n            loadMore={this.loadMoreReviews.bind(this)}\n            hasMore={this.state.availReviews.length != this.state.numRevShown}\n            loader={<div className=\"loader\" key={0}>Loading ...</div>}\n        >\n            {this.state.availReviews.slice(0, this.state.numRevShown).map(review => <Review key={review.reviewID} {...review}/>)}\n        </InfiniteScroll>\n      </div>\n    );\n  }\n}\n\nclass ReviewWriter extends React.Component {\n  constructor(props) {\n    super(props);\n    this.deptList = Array.from(new Set(props.reviews.map(rev => rev.dept)));\n    var deptMap = new Map();\n    for (let review of props.reviews) {\n      let dept = review.dept;\n      if (deptMap.has(dept)) {\n        deptMap.get(dept).coursenums.add(review.coursenum);\n        deptMap.get(dept).profs.add(review.prof);\n        deptMap.get(dept).coursenames.add(review.coursename);\n      } else {\n        deptMap.set(dept, {coursenums: new Set([review.coursenum]),\n                            profs: new Set([review.prof]),\n                            coursenames: new Set([review.coursename])});\n      }\n    }\n    this.deptMap = deptMap;\n    this.state = {\n      availCourses: Array.from(new Set(props.reviews.map(rev => rev.coursenum))),\n      availProfs: Array.from(new Set(props.reviews.map(rev => rev.prof))),\n      availCourseNames: Array.from(new Set(props.reviews.map(rev => rev.coursename)))\n    }\n\n    var today = new Date();\n    this.dates = []\n    var month = today.getMonth() + 1;\n    var year = today.getFullYear();\n    for (var i=0; i<12; i++) {\n      if (month > 8 || month < 2) {\n        this.dates.push(`Fall ${year}`);\n        month = 8;\n      }\n      else if (month > 6) {\n        this.dates.push(`Summer ${year}`);\n        month = 6;\n      }\n      else {\n        this.dates.push(`Spring ${year}`);\n        month = 10;\n        year -= 1;\n      }\n    }\n  }\n  \n  deptChange(e) {\n    var dept = e.target.value;\n    this.setState({availCourses: Array.from(this.deptMap.get(dept).coursenums),\n                  availProfs: Array.from(this.deptMap.get(dept).profs),\n                  availCourseNames: Array.from(this.deptMap.get(dept).coursenames)});\n  }\n\n  render() {\n    return (\n      <div className=\"review-writer\">\n        <label for=\"reviewerInp\">Reviewer (optional): </label>\n        <input className=\"selector\" id=\"reviewerInp\" />\n        <label for=\"deptSelect\">Department: </label>\n        <select id=\"deptSelect\" className='selector' required onChange={this.deptChange.bind(this)}>\n          <option disabled selected></option>\n          {this.deptList.map(deptname =>\n            <option key={deptname}>{deptname}</option>\n            )}\n        </select>\n        <label for=\"courseSelect\">Course number: </label>\n        <input className=\"selector\" id=\"courseSelect\" required list=\"coursenum\" />\n          <datalist id=\"coursenum\" style={{height:1}}>\n            {this.state.availCourses.map(cn =>\n              <option key={cn} value={cn}/>\n              )}\n          </datalist>\n        <label for=\"coursenameInp\">Course name: </label>\n        <input className=\"selector\" id=\"coursenameInp\" required list=\"coursename\" />  \n          <datalist id=\"coursename\">\n            {this.state.availCourseNames.map(cn =>\n              <option key={cn} value={cn}/>\n            )}\n          </datalist>\n        <label for=\"profSelect\">Professor: </label>\n        <input className=\"selector\" id=\"profSelect\" required list=\"prof\" />\n          <datalist id=\"prof\">\n            {this.state.availProfs.map(prof =>\n              <option key={prof} value={prof}/>\n            )}\n          </datalist>\n        <label for=\"dateSelect\">Date taken: </label>\n        <select id=\"dateSelect\" className='selector' required>\n          {this.dates.map(date =>\n            <option key={date}>{date}</option>\n          )}\n        </select>\n        <label for=\"difficultyBox\">Difficulty: </label>\n        <TextareaAutosize\n          id=\"difficultyBox\"\n          style={{width:\"90%\", resize:\"none\"}}\n          minRows={3}\n          maxRows={15}\n          placeholder=\"How hard are the concepts/workload? Is it hard to get a good grade? Etc.\"\n          className=\"selector\"\n        />\n        <label for=\"workloadBox\">Workload: </label>\n        <TextareaAutosize\n          id=\"workloadBox\"\n          style={{width:\"90%\", resize:\"none\"}}\n          minRows={3}\n          maxRows={15}\n          placeholder=\"What types of assignments are there? How many hours a week do they take? Etc.\"\n          className=\"selector\"\n        />\n        <label for=\"lectureBox\">Lectures: </label>\n        <TextareaAutosize\n          id=\"lectureBox\"\n          style={{width:\"90%\", resize:\"none\"}}\n          minRows={3}\n          maxRows={15}\n          placeholder=\"How were lectures? Worth/required to go to class? Etc.\"\n          className=\"selector\"\n        />\n        <label for=\"miscBox\">Miscellaneous: </label>\n        <TextareaAutosize\n          id=\"miscBox\"\n          style={{width:\"90%\", resize:\"none\"}}\n          minRows={3}\n          maxRows={15}\n          className=\"selector\"\n        />\n        <button id='submitButton' className={this.state.darkMode ? 'dark-mode': null} onClick={() => this.toggleReadMode()}>Submit!</button>\n        <div style={{\"min-height\": \"20vh\"}}/>\n      </div>\n    );\n  }\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    var darkmode;\n    if(localStorage.getItem(\"theme\")){\n      if(localStorage.getItem(\"theme\") == \"dark\"){\n          darkmode = true;\n          document.documentElement.setAttribute('data-theme', 'dark');\n      }\n    } else {\n      darkmode = false;\n      document.documentElement.setAttribute('data-theme', 'light');\n    }\n    this.state = {\n      isLoading: true,\n      readMode: false,\n      reviews: [],\n      darkMode: false\n    };\n  }\n\n  readData2() {\n    fetch('./reviews.json').then((response) => {\n      return response.json();\n    }).then((reviews) => {\n      this.setState({reviews: reviews, isLoading: false});\n    })\n  }\n\n  async readKey() {\n    return await fetch('./api.config').then((response) => {\n      return response.json();\n    }).then(kv => {return kv.key});\n  }\n\n  async readData() {\n    var API_KEY = await this.readKey();\n    var SPREADSHEET_ID = '1AJO52gUTAElYGcfGMK07YkEfWdYNEITkjzS8hhOFTww'\n    window.gapi.client.init({\n      apiKey: API_KEY\n    }).then(function () {\n        // 3. Initialize and make the API request.\n        var path = `https://sheets.googleapis.com/v4/spreadsheets/${SPREADSHEET_ID}`\n        return window.gapi.client.request({\n            \"path\": path,\n            \"method\": \"GET\",\n            \"params\": {\n                \"key\": API_KEY\n            }\n        })\n    }).then((response) => {\n        var sheets = response.result.sheets;\n        var titles = Array.from(sheets, sheet => {\n          return sheet.properties.title;\n        });\n        var data = Array.from(sheets, sheet => {\n          var title = sheet.properties.title;\n          var path = `https://sheets.googleapis.com/v4/spreadsheets/${SPREADSHEET_ID}/values/${title}`\n          return window.gapi.client.request({\n            \"path\": path,\n            \"method\": \"GET\",\n            \"params\": {\n                \"key\": API_KEY\n            }\n          });\n        });\n        Promise.all(data).then((data) => {\n          var reviews = [];\n          let revCount = 0;\n          for (let i=0; i<data.length; i++) {\n            let sheet = data[i].result.values.slice(2);\n            for (var row of sheet) {\n              if (row.length < 9) {\n                let l = 9 - row.length\n                row.push(...Array.from({length: l}, () => \"\"))\n              }\n              var rev = {\n                dept: titles[i].trim(),\n                coursenum: row[0].trim(),\n                coursename: row[1].trim(),\n                prof: row[2].trim(),\n                date: row[3].trim(),\n                difficulty: row[4].trim(),\n                workload: row[5].trim(),\n                lecture: row[6].trim(),\n                misc: row[7].trim(),\n                reviewer: row[8].trim(),\n                reviewID: `rev${revCount}`\n              };\n              rev.datenum = Semester2Num(rev.date);\n              reviews.push(rev);\n              revCount += 1;\n            }\n          }\n          reviews.sort((rev1, rev2) => rev2.datenum - rev1.datenum);\n          this.setState({reviews: reviews, isLoading: false});\n        }, (error) => {\n          console.log(error)\n        })\n    }, function(error) {\n        console.log(error);\n    });\n  }\n\n  componentDidMount() {\n    const script = document.createElement(\"script\");\n    script.src = \"https://apis.google.com/js/api.js\";\n    script.async = true;\n    script.onload = () => {\n      window.gapi.load('client', ()=>{this.readData()})\n    };\n\n    document.body.appendChild(script);\n  }\n\n  toggleDarkMode() {\n    this.setState(state => {\n      if (state.darkMode) {\n        localStorage.setItem('theme', 'dark');\n        document.documentElement.setAttribute('data-theme', 'dark');\n      } else {\n        localStorage.setItem('theme', 'light');\n        document.documentElement.setAttribute('data-theme', 'light');\n      }\n      return ({darkMode: !state.darkMode});\n    });\n  }\n\n  toggleReadMode() {\n    this.setState(state => ({readMode: !state.readMode}));\n  }\n  \n  render() {\n    if (this.state.isLoading) {\n      return (\n        <center id='loading'>\n        <h1>Loading ...</h1>\n      </center>);\n    }\n    var content;\n    var btn;\n    if (this.state.readMode) {\n      content = <ReviewReader reviews={this.state.reviews}></ReviewReader>;\n      btn = \"Submit a review!\";\n    } else {\n      content = <ReviewWriter reviews={this.state.reviews}></ReviewWriter>;\n      btn = \"Return to search\"\n    }\n    return (\n      <div className={this.state.darkMode ? 'App dark-mode': 'App'}>\n        <FaAdjust size={32} id='darkmodeButton' className={this.state.darkMode ? 'dark-mode': null} onClick={() => this.toggleDarkMode()}/>\n        <div className='column'>\n          <button id='rwButton' className={this.state.darkMode ? 'dark-mode': null} onClick={() => this.toggleReadMode()}>{btn}</button>\n          {content}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}